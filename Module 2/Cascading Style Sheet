# Introduction to CSS Grid
# CSS grid layout or CSS grid creates complex responsive web design grid layouts more easily and consistently across browsers.
# The CSS Grid Layout Module offers a grid-based layout system, with rows and columns, making it easier to design web pages without having to use floats and positioning.

<div class="grid-container">
  <div class="grid-item">1</div>
  <div class="grid-item">2</div>
  <div class="grid-item">3</div>
</div>

.grid-container {
  display: grid;
  column-gap: 50px;
}

# CSS Fonts
# In CSS there are five generic font families:

# Serif fonts have a small stroke at the edges of each letter. They create a sense of formality and elegance.
# Sans-serif fonts have clean lines (no small strokes attached). They create a modern and minimalistic look.
# Monospace fonts - here all the letters have the same fixed width. They create a mechanical look. 
# Cursive fonts imitate human handwriting.
# Fantasy fonts are decorative/playful fonts.

# All the different font names belong to one of the generic font families.

# Examples:
- Serif	are Times New Roman, Georgia or Garamond
- Sans-serif are	Arial, Verdana or Helvetica
- Monospace	are Courier New, Lucida Console or Monaco
- Cursive	are Brush Script MT or Lucida Handwriting
- Fantasy	are Copperplate or Papyrus

.p1 {
  font-family: "Times New Roman", Times, serif;
}

.p2 {
  font-family: Arial, Helvetica, sans-serif;
}

.p3 {
  font-family: "Lucida Console", "Courier New", monospace;
}

# CSS Images on HTML
<div class="banner-image">
<img src="C:\Users\sudip\OneDrive\Documents\Alison - Learning\html-css\Logo\decamp-fantastic-fries-logo-white.png" alt="Logo">
</div>

.banner-image img {
 width: 216px;
 height: 100%;
 
 # Refactoring CSS Code for More Specific Selectors
 # Refactoring means when you have code that can be improved
 
 
